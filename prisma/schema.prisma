generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model Customer {
    id           String   @id
    first_name   String?
    last_name    String?
    company_name String
    email        String   @unique
    password     String
    role         String   @default("user")
    registerDate DateTime @default(now())
}

model Category {
    id          String    @id @default(cuid())
    name        String    @unique
    slug        String    @unique
    description String?
    createdAt   DateTime  @default(now())
    products    Product[]
}

model Product {
    id                String    @id @default(cuid())
    title             String    @unique
    slug              String    @unique
    description       String    @db.VarChar(10000)
    short_description String?
    price             Float
    quantity          Int
    image             String
    specifications    String?
    visible           Boolean   @default(true)
    available         Boolean   @default(true)
    sale_price        Float?
    weight            Float     @default(1)
    averageRating     Float?
    createdAt         DateTime  @default(now())
    category          Category? @relation(fields: [categoryId], references: [id])
    categoryId        String?
}
